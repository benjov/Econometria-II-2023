knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
#tinytex::install_tinytex()
#installed.packages('foreign')
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("plotly")
#install.packages("car"")
#install.packages("MASS")
#install.packages("stargazer")
#install.packages("lmtest")
#install.packages("zoo")
#install.packages("erer")
#install.packages("caret")
#install.packages("e1071")
#install.packages("arsenal")
library(tidyverse)
library(knitr)
library(foreign)
library(ggplot2)
library(dplyr)
library(plotly)
library(car)
library(MASS)
library(stargazer)
library(lmtest)
library(zoo)
library(erer)
library(lattice)
library(caret)
library(e1071)
library(arsenal)
# Import the data and look at the first six rows
Datos <- read.csv(file = 'Datos.csv')
#dataframe %>% head()
dim(Datos)
#
Datos %>% count(Cat.Rev.Year)
# Convert to a factor with ordered level
Datos$Cat.Rev.Year <- factor(Datos$Cat.Rev.Year, order = TRUE,
levels =c("1. Menos de 1M",
"2. Más de 1M y menos de 5M",
"3. Más de 5M y menos de 20M",
"4. Más de 20M"))
#
Datos %>% count(Cat.Rev.Year)
#
Datos$positive_n <- 0
Datos$positive_n[(Datos$positive_year <= 4)] <- 1
Datos$positive_n[(Datos$positive_year > 4) & (Datos$positive_year <= 60)] <- 2
Datos$positive_n[(Datos$positive_year > 60)] <- 3
Datos$positive_n <- factor(Datos$positive_n)
#
Datos$Followers_n <- 0
Datos$Followers_n[(Datos$Followers_year <= 50)] <- 1
Datos$Followers_n[(Datos$Followers_year > 50) & (Datos$Followers_year <= 500)] <- 2
Datos$Followers_n[(Datos$Followers_year > 500)] <- 3
Datos$Followers_n <- factor(Datos$Followers_n)
#
Datos %>% count(positive_n)
Datos %>% count(Followers_n)
table_Todos <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos)
summary(table_Todos, title = "Base Completa")
Datos_Menos_1M <- subset(Datos, Cat.Rev.Year == "1. Menos de 1M")
table_M_1M <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos_Menos_1M)
summary(table_M_1M, title = "Base Sólo los de Menos de 1 M")
set.seed(1234)
Datos_Menos_1M_10p <- Datos_Menos_1M[sample(nrow(Datos_Menos_1M), 1700, replace = FALSE), ]
table_M_1M_10p <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos_Menos_1M_10p)
summary(table_M_1M_10p, title = "Base Sólo 10% de los de Menos de 1 M")
Datos_Otros <- subset(Datos, Cat.Rev.Year != "1. Menos de 1M")
Datos_Subset <- rbind(Datos_Menos_1M_10p, Datos_Otros)
Datos_Subset %>% count(Cat.Rev.Year)
set.seed(1234)
trainIndex <- createDataPartition(Datos_Subset$Cat.Rev.Year,
p = 0.7,
list = FALSE,
times = 1)
Train <- Datos_Subset[ trainIndex, ]
Valid <- Datos_Subset[-trainIndex, ]
Train %>% count(Cat.Rev.Year)
Valid %>% count(Cat.Rev.Year)
table_Train <- tableby(~Cat.Rev.Year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Train)
summary(table_Train, title = "Base Train")
# Tree - based:
OLM_01 <- polr(Cat.Rev.Year ~ Price + Score + Followers_n + positive_n + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + Simulation + RPG + Character.Customization + Funny + Sci.fi + Exploration + Action + Sexual.Content, data = Train, Hess = TRUE, method = "logistic")
saveRDS(OLM_01, "OLM_01_model.rds")
summary(OLM_01)
OLM_01_coef <- data.frame(coef(summary(OLM_01)))
OLM_01_coef$pval = round((pnorm(abs(OLM_01_coef$t.value), lower.tail = FALSE) * 2), 2)
#OLM_01_coef
stargazer(OLM_01, type = "text")
#
Probs <- data.frame(predict(OLM_01, newdata = Valid, type = "probs") )
Class <- data.frame(predict(OLM_01, newdata = Valid, type = "class") )
#
names(Probs)[1] <- "Menos.de.1M"
names(Probs)[2] <- "Más.de.1M.y.menos.de.5M"
names(Probs)[3] <- "Más.de.5M.y.menos.de.20M"
names(Probs)[4] <- "Más.de.20M"
#
Valid <- cbind(Valid, Probs)
#
names(Class)[1] <- "Class.Predict"
#
Valid <- cbind(Valid, Class)
#
Valid$Compare <- 0
Valid$Compare[as.numeric(Valid$Cat.Rev.Year) == as.numeric(Valid$Class.Predict)] <- 1
Final <- cbind( data.frame(Valid %>% count(Cat.Rev.Year)) ,  data.frame(Valid %>% group_by(Cat.Rev.Year) %>% summarise(Compare = sum(Compare))) )
Final$Porcentaje <- 100 * Final$Compare / Final$n
Final
#
#Creating confusion matrix
Conf_Matrix <- confusionMatrix(data = Valid$Class.Predict, reference = Valid$Cat.Rev.Year)
#Display results
Conf_Matrix
#
Probs <- data.frame(predict(OLM_01, newdata = Datos, type = "probs") )
Class <- data.frame(predict(OLM_01, newdata = Datos, type = "class") )
#
names(Probs)[1] <- "Menos.de.1M"
names(Probs)[2] <- "Más.de.1M.y.menos.de.5M"
names(Probs)[3] <- "Más.de.5M.y.menos.de.20M"
names(Probs)[4] <- "Más.de.20M"
#
Datos <- cbind(Datos, Probs)
#
names(Class)[1] <- "Class.Predict"
#
Datos <- cbind(Datos, Class)
#
Datos$Compare <- 0
Datos$Compare[as.numeric(Datos$Cat.Rev.Year) == as.numeric(Datos$Class.Predict)] <- 1
Final <- cbind( data.frame(Datos %>% count(Cat.Rev.Year)) ,  data.frame(Datos %>% group_by(Cat.Rev.Year) %>% summarise(Compare = sum(Compare))) )
Final$Porcentaje <- 100 * Final$Compare / Final$n
Final
#
#Creating confusion matrix
Conf_Matrix <- confusionMatrix(data = Datos$Class.Predict, reference = Datos$Cat.Rev.Year)
#Display results
Conf_Matrix
#
setup_01 <- data.frame(Price = 24.99, Score = 9, Followers_n = factor(3), positive_n = factor(3),
Adventure = 1, Singleplayer = 1, Story.Rich = 0, Horror = 0, X3D = 1, Survival = 1,
Choices.Matter = 0, Historical = 0, Mystery = 0, Replay.Value = 0, Early.Access = 1,
Female.Protagonist = 0, Lovecraftian = 0,
Open.World = 1, Multiplayer = 1, Co.op = 1, Indie = 1, Atmospheric = 0, Violent = 0,
Online.Co.Op = 1, Third.Person = 1, Sandbox = 1, Strategy = 0, Difficult = 0, Gore = 0,
Soundtrack = 0, Great.Soundtrack = 0, Simulation = 0, RPG = 1, Character.Customization = 1,
Funny = 0, Sci.fi = 0, Exploration = 0, Action = 1, Sexual.Content = 0 )
# Predicción dado el setup or valid set
predict(OLM_01, newdata = setup_01, type = "probs")
data.frame(predict(OLM_01, newdata = setup_01, type = "class") )
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
#tinytex::install_tinytex()
#installed.packages('foreign')
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("plotly")
#install.packages("car"")
#install.packages("MASS")
#install.packages("stargazer")
#install.packages("lmtest")
#install.packages("zoo")
#install.packages("erer")
#install.packages("caret")
#install.packages("e1071")
#install.packages("arsenal")
library(tidyverse)
library(knitr)
library(foreign)
library(ggplot2)
library(dplyr)
library(plotly)
library(car)
library(MASS)
library(stargazer)
library(lmtest)
library(zoo)
library(erer)
library(lattice)
library(caret)
library(e1071)
library(arsenal)
# Import the data and look at the first six rows
Datos <- read.csv(file = 'Datos.csv')
#dataframe %>% head()
dim(Datos)
#
Datos %>% count(Cat.Rev.Year)
# Convert to a factor with ordered level
Datos$Cat.Rev.Year <- factor(Datos$Cat.Rev.Year, order = TRUE,
levels =c("1. Menos de 1M",
"2. Más de 1M y menos de 5M",
"3. Más de 5M y menos de 20M",
"4. Más de 20M"))
#
Datos %>% count(Cat.Rev.Year)
#
Datos$positive_n <- 0
Datos$positive_n[(Datos$positive_year <= 4)] <- 1
Datos$positive_n[(Datos$positive_year > 4) & (Datos$positive_year <= 60)] <- 2
Datos$positive_n[(Datos$positive_year > 60)] <- 3
Datos$positive_n <- factor(Datos$positive_n)
#
Datos$Followers_n <- 0
Datos$Followers_n[(Datos$Followers_year <= 50)] <- 1
Datos$Followers_n[(Datos$Followers_year > 50) & (Datos$Followers_year <= 500)] <- 2
Datos$Followers_n[(Datos$Followers_year > 500)] <- 3
Datos$Followers_n <- factor(Datos$Followers_n)
#
Datos %>% count(positive_n)
Datos %>% count(Followers_n)
table_Todos <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos)
summary(table_Todos, title = "Base Completa")
Datos_Menos_1M <- subset(Datos, Cat.Rev.Year == "1. Menos de 1M")
table_M_1M <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos_Menos_1M)
summary(table_M_1M, title = "Base Sólo los de Menos de 1 M")
set.seed(1234)
Datos_Menos_1M_10p <- Datos_Menos_1M[sample(nrow(Datos_Menos_1M), 1700, replace = FALSE), ]
table_M_1M_10p <- tableby(~revenue_year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Datos_Menos_1M_10p)
summary(table_M_1M_10p, title = "Base Sólo 10% de los de Menos de 1 M")
Datos_Otros <- subset(Datos, Cat.Rev.Year != "1. Menos de 1M")
Datos_Subset <- rbind(Datos_Menos_1M_10p, Datos_Otros)
Datos_Subset %>% count(Cat.Rev.Year)
set.seed(1234)
trainIndex <- createDataPartition(Datos_Subset$Cat.Rev.Year,
p = 0.7,
list = FALSE,
times = 1)
Train <- Datos_Subset[ trainIndex, ]
Valid <- Datos_Subset[-trainIndex, ]
Train %>% count(Cat.Rev.Year)
Valid %>% count(Cat.Rev.Year)
table_Train <- tableby(~Cat.Rev.Year + Price + year + mes + positive_year + negative_year + Followers_year + Reviews_year + positive_n + Followers_n + Score + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + First.Person + Simulation + RPG + Character.Customization + Funny + Casual + Sci.fi + Exploration + Action + Sexual.Content + Realistic + Nudity + Fantasy + Anime + Building + Turn.Based + Tactical + Management + Psychological + Visual.Novel + Psychological.Horror + Moddable + Crafting, data = Train)
summary(table_Train, title = "Base Train")
# Tree - based:
OLM_01 <- polr(Cat.Rev.Year ~ Price + Score + Followers_n + positive_n + Adventure + Singleplayer + Story.Rich + Horror + X3D + Survival + Choices.Matter + Historical + Mystery + Replay.Value + Early.Access + Female.Protagonist + Lovecraftian + Open.World + Multiplayer + Co.op + Indie + Atmospheric + Violent + Online.Co.Op + Third.Person + Sandbox + Strategy + Difficult + Gore + Soundtrack + Great.Soundtrack + Simulation + RPG + Character.Customization + Funny + Sci.fi + Exploration + Action + Sexual.Content, data = Train, Hess = TRUE, method = "logistic")
saveRDS(OLM_01, "OLM_01_model.rds")
summary(OLM_01)
OLM_01_coef <- data.frame(coef(summary(OLM_01)))
OLM_01_coef$pval = round((pnorm(abs(OLM_01_coef$t.value), lower.tail = FALSE) * 2), 2)
#OLM_01_coef
stargazer(OLM_01, type = "text")
#
Probs <- data.frame(predict(OLM_01, newdata = Valid, type = "probs") )
Class <- data.frame(predict(OLM_01, newdata = Valid, type = "class") )
#
names(Probs)[1] <- "Menos.de.1M"
names(Probs)[2] <- "Más.de.1M.y.menos.de.5M"
names(Probs)[3] <- "Más.de.5M.y.menos.de.20M"
names(Probs)[4] <- "Más.de.20M"
#
Valid <- cbind(Valid, Probs)
#
names(Class)[1] <- "Class.Predict"
#
Valid <- cbind(Valid, Class)
#
Valid$Compare <- 0
Valid$Compare[as.numeric(Valid$Cat.Rev.Year) == as.numeric(Valid$Class.Predict)] <- 1
Final <- cbind( data.frame(Valid %>% count(Cat.Rev.Year)) ,  data.frame(Valid %>% group_by(Cat.Rev.Year) %>% summarise(Compare = sum(Compare))) )
Final$Porcentaje <- 100 * Final$Compare / Final$n
Final
#
#Creating confusion matrix
Conf_Matrix <- confusionMatrix(data = Valid$Class.Predict, reference = Valid$Cat.Rev.Year)
#Display results
Conf_Matrix
#
Probs <- data.frame(predict(OLM_01, newdata = Datos, type = "probs") )
Class <- data.frame(predict(OLM_01, newdata = Datos, type = "class") )
#
names(Probs)[1] <- "Menos.de.1M"
names(Probs)[2] <- "Más.de.1M.y.menos.de.5M"
names(Probs)[3] <- "Más.de.5M.y.menos.de.20M"
names(Probs)[4] <- "Más.de.20M"
#
Datos <- cbind(Datos, Probs)
#
names(Class)[1] <- "Class.Predict"
#
Datos <- cbind(Datos, Class)
#
Datos$Compare <- 0
Datos$Compare[as.numeric(Datos$Cat.Rev.Year) == as.numeric(Datos$Class.Predict)] <- 1
Final <- cbind( data.frame(Datos %>% count(Cat.Rev.Year)) ,  data.frame(Datos %>% group_by(Cat.Rev.Year) %>% summarise(Compare = sum(Compare))) )
Final$Porcentaje <- 100 * Final$Compare / Final$n
Final
#
#Creating confusion matrix
Conf_Matrix <- confusionMatrix(data = Datos$Class.Predict, reference = Datos$Cat.Rev.Year)
#Display results
Conf_Matrix
#
setup_01 <- data.frame(Price = 24.99, Score = 9, Followers_n = factor(3), positive_n = factor(3),
Adventure = 1, Singleplayer = 1, Story.Rich = 0, Horror = 0, X3D = 1, Survival = 1,
Choices.Matter = 0, Historical = 0, Mystery = 0, Replay.Value = 0, Early.Access = 1,
Female.Protagonist = 0, Lovecraftian = 0,
Open.World = 1, Multiplayer = 1, Co.op = 1, Indie = 1, Atmospheric = 0, Violent = 0,
Online.Co.Op = 1, Third.Person = 1, Sandbox = 1, Strategy = 0, Difficult = 0, Gore = 0,
Soundtrack = 0, Great.Soundtrack = 0, Simulation = 0, RPG = 1, Character.Customization = 1,
Funny = 0, Sci.fi = 0, Exploration = 0, Action = 1, Sexual.Content = 0 )
# Predicción dado el setup or valid set
predict(OLM_01, newdata = setup_01, type = "probs")
data.frame(predict(OLM_01, newdata = setup_01, type = "class") )
